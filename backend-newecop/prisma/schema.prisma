// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model News {
  id        Int       @id @default(autoincrement())
  category  String?  @db.Text()
  title     String?  @db.Text()
  date      String?
  author    String
  pTags     String
  imgLinks  String
  contentEn String?  @db.Text()
  ref       String
  titleTh   String?  @db.Text()
  contentTh String?  @db.Text()
  editor    User?    @relation(fields: [editorUsername], references: [username])
  editorUsername String?
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @updatedAt
  viewCount  Int       @default(0)
  viewedBy   View[]    // Change to reference the View model
  trend_new String @default("normal")
}



model View {
  id          Int      @id @default(autoincrement())
  ip          String
  userAgent   String
  newsId      Int
  news        News     @relation(fields: [newsId], references: [id])
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @updatedAt
  country     String?
  region      String?
  city        String?
  latitude    Float?
  longitude   Float?
}




model User {
  id                Int                 @id @default(autoincrement())
  username          String?             @db.VarChar(50) @unique
  password          String?             @db.VarChar(255)
  email             String?             @db.VarChar(255)
  address           String?             @db.VarChar(255)
  role              Int                 @default(0)
  is_verified       Boolean             @default(false)
  verificationToken String?
  is_banned         Boolean             @default(false)
  resetToken        String? // เพิ่มฟิลด์สำหรับเก็บ token สำหรับรีเซ็ตรหัสผ่าน
  resetTokenExpiry  DateTime? // เพิ่มฟิลด์สำหรับกำหนดเวลาหมดอายุของ token สำหรับรีเซ็ตรหัสผ่าน
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @updatedAt
  News              News[]              // Assuming you have a relation with News
}
