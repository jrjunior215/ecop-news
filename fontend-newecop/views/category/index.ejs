<!-- <div class="content_related_blog">
    <div class="header_blog_list">
        <h1>Trending News</h1>
    </div>
    <div class="main_related_blog">
        <div class="related_blog">
            <div class="related_blog_img">
                <img src="img/rectangle-87.webp" alt="">
            </div>
            <div class="related_blog_topic">
                <h1></h1>
            </div>
            <div class="related_blog_desc">

            </div>
            <div class="related_blog_read_more">
                <a href="">Read More</a>
            </div>
            <div class="related_blog_option">
                <div class="profile_blog_writing">
                    <img src="img/rectangle-21.png" alt="">
                    <span></span>
                </div>
                <div class="related_blog_view">
                    <i class="fa-solid fa-eye"></i>
                    <span></span>
                </div>
            </div>
        </div>
        <div class="related_blog">
            <div class="related_blog_img">
                <img src="img/rectangle-86.webp" alt="">
            </div>
            <div class="related_blog_topic">
                <h1></h1>
            </div>
            <div class="related_blog_desc">
            </div>
            <div class="related_blog_read_more">
                <a href="">Read More</a>
            </div>
            <div class="related_blog_option">
                <div class="profile_blog_writing">
                    <img src="img/rectangle-21.png" alt="">
                    <span></span>
                </div>
                <div class="related_blog_view">
                    <i class="fa-solid fa-eye"></i>
                    <span></span>
                </div>
            </div>
        </div>
    </div>

    <div class="arrow">

    </div>
</div> -->

<div class="content_maketing_articles">
    <div class="header_blog_list">
        <h1>News Articles</h1>
    </div>
    <div class="main_maketing_articles">
        <!-- <div class="maketing_articles">
            <div class="articles_img">
                <img src="" alt="">
            </div>
            <div class="header_articles">
                <h1></h1>
            </div>
            <div class="desc_articles">
                <p> </p>
            </div>
            <div class="article_option">
                <div class="profile_article_writing">
                    <img src="" alt="">
                    <span></span>
                </div>
                <div class="related_article_view">
                    <i class="fa-solid fa-eye"></i>
                    <span></span>
                </div>
            </div>
        </div> -->
</div>

<div class="container_pagination">
    <div class="pagination">
        <a class="pagination-newer" href="#">PREV</a>
        <span class="pagination-inner">
            <a href="#">1</a>
            <a href="#">2</a>
            <a href="#">3</a>
            <a href="#">4</a>
            <a href="#">5</a>
            <a href="#">6</a>
        </span>
        <a class="pagination-older" href="#">NEXT</a>
    </div>
</div>


<div class="content_blog_list">
    <div class="main_blog_list">
        <a href="#" class="content_blog">
            <div class="blog_image">
                <img src="/img/blog1.jpg" alt="">
            </div>
            <span>Cyber Attack</span>
        </a>
        <a href="#" class="content_blog">
            <div class="blog_image">
                <img src="/img/blog2.jpg" alt="">
            </div>
            <span>Malware</span>
        </a>
        <a href="#" class="content_blog">
            <div class="blog_image">
                <img src="/img/blog3.jpg" alt="">
            </div>
            <span>Cyber Threat</span>
        </a>
        <a href="#" class="content_blog">
            <div class="blog_image">
                <img src="/img/blog4.jpg" alt="">
            </div>
            <span>Vulnerability</span>
        </a>
    </div>
</div>

<script>
    window.onload = async function () {
        try {
            const maxTextLength = 100;

            // Function to fetch data from the provided URL
            const fetchData = async (url) => {
                const response = await fetch(url);
                return await response.json();
            };

            // Function to sanitize HTML content to text
            const sanitizeHTML = (html) => {
                const temp = document.createElement('div');
                temp.innerHTML = html;
                return temp.textContent || temp.innerText || '';
            };

            // Function to create a news item element
            const createNewsItem = (newsItem) => {
                const item = document.createElement('div');
                item.classList.add('maketing_articles');

                // HTML template for the news item
                item.innerHTML = `
                    <div class="container_box_articles">
                        <div class="articles_img">
                            <img src="/images/${newsItem.imgLinks}.webp" alt="${newsItem.imgLinks}">
                        </div>
                        <div class="header_articles">
                            <h1>${newsItem.titleTh}</h1>
                        </div>
                        <div class="desc_articles">
                            <p>${sanitizeHTML(newsItem.contentTh.substring(0, maxTextLength))}${newsItem.contentTh.length > maxTextLength ? '...' : ''}</p>
                        </div>
                        <a href="#" class="read-more-button" 
                            data-news-id="${newsItem.id}"
                            data-img-url="${newsItem.imgLinks}"
                            data-title-th="${newsItem.titleTh}"
                            data-content-th="${newsItem.contentTh}"
                            data-title-en="${newsItem.title}"
                            data-content-en="${sanitizeHTML(newsItem.contentEn)}"
                            data-date="${newsItem.date}"
                            data-author="${newsItem.author}"
                            type="button">Read More</a>
                    </div>
                    <div class="article_option">
                        <div class="profile_article_writing">
                            <img src="img/rectangle-21.png" alt="">
                            <span>${newsItem.author}</span>
                        </div>
                        <div class="related_article_view">
                            <i class="fa-solid fa-eye"></i>
                            <span>${newsItem.viewCount}</span>
                        </div>
                    </div>
                `;

                return item;
            };

            // Select the containers for marketing articles and related blogs
            const marketingArticlesContainer = document.querySelector('.main_maketing_articles');

            // Function to append news items to a container
            const appendNewsItems = (container, newsItems) => {
                const fragment = document.createDocumentFragment();
                newsItems.forEach(newsItem => {
                    fragment.appendChild(createNewsItem(newsItem));
                });
                container.appendChild(fragment);
            };

            // Function to create pagination
           // Function to create pagination
const createPagination = (currentPage, totalPages) => {
    const paginationContainer = document.querySelector('.container_pagination');
    paginationContainer.innerHTML = ''; // Clear existing pagination

    const prevButton = document.createElement('a');
    prevButton.classList.add('pagination-newer');
    prevButton.textContent = 'PREV';
    // prevButton.href = '#';
    prevButton.addEventListener('click', () => {
        if (currentPage > 1) {
            fetchDataForPage(currentPage - 1);
        }
    });
    paginationContainer.appendChild(prevButton);

    const paginationInner = document.createElement('span');
    paginationInner.classList.add('pagination-inner');

    // Add page links
    const maxVisiblePages = 5; // Maximum number of visible page links
    const halfVisiblePages = Math.floor(maxVisiblePages / 2);
    let startPage = Math.max(currentPage - halfVisiblePages, 1);
    let endPage = Math.min(startPage + maxVisiblePages - 1, totalPages);

    if (endPage - startPage < maxVisiblePages - 1) {
        startPage = Math.max(endPage - maxVisiblePages + 1, 1);
    }

    if (startPage > 1) {
        const ellipsisStart = document.createElement('span');
        ellipsisStart.textContent = '...';
        paginationInner.appendChild(ellipsisStart);
    }

    for (let i = startPage; i <= endPage; i++) {
        const pageLink = document.createElement('a');
        // pageLink.href = '#';
        pageLink.textContent = i;
        if (i === currentPage) {
            pageLink.classList.add('pagination-active');
        }
        pageLink.addEventListener('click', () => {
            fetchDataForPage(i);
        });
        paginationInner.appendChild(pageLink);
    }

    if (endPage < totalPages) {
        const ellipsisEnd = document.createElement('span');
        ellipsisEnd.textContent = '...';
        paginationInner.appendChild(ellipsisEnd);
    }

    paginationContainer.appendChild(paginationInner);

    const nextButton = document.createElement('a');
    nextButton.classList.add('pagination-older');
    nextButton.textContent = 'NEXT';
    nextButton.href = '#';
    nextButton.addEventListener('click', () => {
        if (currentPage < totalPages) {
            fetchDataForPage(currentPage + 1);
        }
    });
    paginationContainer.appendChild(nextButton);
};
            
 // Function to fetch data for a specific page
const fetchDataForPage = async (page) => {
    try {
        const urlParts = window.location.pathname.split('/');
        let category = urlParts[2]; // Get the category from the URL

        // Replace "-" with " " if category is "Data-Breach"
        if (category === "Data-Breach") {
            category = "Data Breach";
        }

        let apiUrl = `http://localhost:8000/api/news/search?pageSize=12&page=${page}`;
        if (category) {
            apiUrl += `&category=${category}`;
        }

        const response = await fetch(apiUrl);
        const data = await response.json();
        console.log("🚀 ~ fetchDataForPage ~ data:", data)
        const newsItems = data.data;
        // Clear existing news items
        marketingArticlesContainer.innerHTML = '';
        appendNewsItems(marketingArticlesContainer, newsItems);
        createPagination(page, data.pagination.totalPages);
    } catch (error) {
        console.error('Error fetching data:', error);
    }
};

const initializePagination = async () => {
    try {
        // Extract category from the URL
        const urlParts = window.location.pathname.split('/');
        let category = urlParts[2]; // Get the category from the URL

        // Replace "-" with " " if category is "Data-Breach"
        if (category === "Data-Breach") {
            category = "Data Breach";
        }

        console.log("🚀 ~ initializePagination ~ category:", category)

        // Build API URL with category
        let apiUrl = `http://localhost:8000/api/news/search?pageSize=12&page=1`;
        if (category) {
            apiUrl += `&category=${category}`;
        }

        // Fetch data from the API
        const response = await fetch(apiUrl);
        const data = await response.json();
        console.log("🚀 ~ initializePagination ~ data:", data)
        const newsItems = data.data;
        const currentPage = data.pagination.currentPage;
        const totalPages = data.pagination.totalPages;
        appendNewsItems(marketingArticlesContainer, newsItems);
        createPagination(currentPage, totalPages);
    } catch (error) {
        console.error('Error initializing pagination:', error);
    }
};


            // Initialize pagination
            initializePagination();

            // Event delegation for "Read More" buttons
            document.addEventListener('click', function(event) {
                if (event.target.classList.contains('read-more-button')) {
                    event.preventDefault();
                    const button = event.target;
                    const { newsId, imgUrl, titleTh, contentTh, titleEn, contentEn, date, author } = button.dataset;

                    // Store selected news data in localStorage
                    localStorage.setItem('selectedNews', JSON.stringify({ newsId, imgUrl, titleTh, contentTh, titleEn, contentEn, date, author }));

                    const url = `/news/${newsId}`;
                    window.location.href = url;
                }
            });

        } catch (error) {
            console.error('Error loading data:', error);
        }


    };
    
</script>